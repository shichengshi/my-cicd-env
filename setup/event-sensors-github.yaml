apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: webhook
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
  - name: test-dep
    eventSourceName: webhook
    eventName: example
  triggers:
  - template:
      name: trigger
      argoWorkflow:
        group: argoproj.io
        version: v1alpha1
        resource: workflows
        operation: submit
        source:
          resource:
            apiVersion: argoproj.io/v1alpha1
            kind: Workflow
            metadata:
              generateName: argo-workflows-demo-
              namespace: argo-events
            spec:
              entrypoint: build
              serviceAccountName: workflow
              arguments:
                parameters:
                - name: app_repo
                  value: git://github.com/
                - name: container_image
                  value: /my-airtng-node
                - name: container_tag
                  value: "latest"
              volumes:
              - name: regcred
                secret:
                  secretName: regcred
                  items:
                    - key: dockerconfig.json
                      path: config.json
              templates:
              - name: build
                dag:
                  tasks:
                  - name: event-type
                    template: event-type
                  - name: push
                    template: push
                    when: "metadata['x-github-event'] == ['push']"
                  - name: release
                    template: release
                    when: "metadata['x-github-event'] == ['release']"
                outputs:
                  parameters:
                    - name: stepresult
                      valueFrom:
                        expression: "metadata['x-github-event'] == ['push'] ? tasks.push.outputs.result : tasks.release.outputs.result"
#                        expression: "tasks['flip-coin'].outputs.result == 'heads' ? tasks.heads.outputs.result : tasks.tails.outputs.result"
                  
                - name: push
                  templateRef:
                    name: container-image
                    template: build-kaniko-git
                    clusterScope: true
                  arguments:
                    parameters:
                    - name: app_repo
                      value: "{{workflow.parameters.app_repo}}"
                    - name: container_image
                      value: "{{workflow.parameters.container_image}}"
                    - name: container_tag
                      value: "{{workflow.parameters.container_tag}}"
                      
                - name: release
                  templateRef:
                    name: container-image
                    template: build-kaniko-git
                    clusterScope: true
                  arguments:
                    parameters:
                    - name: app_repo
                      value: "{{workflow.parameters.app_repo}}"
                    - name: container_image
                      value: "{{workflow.parameters.container_image}}"
                    - name: container_tag
                      value: "{{workflow.parameters.container_tag}}"
        parameters:
        - src:
            dependencyName: test-dep
            dataKey: body.repository.full_name
          dest: spec.arguments.parameters.0.value
          operation: append
        - src:
            dependencyName: test-dep
            dataKey: body.sender.login
          dest: spec.arguments.parameters.1.value
          operation: prepend

